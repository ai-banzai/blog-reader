{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/comment.model.ts","webpack:///src/app/core/comment.service.ts","webpack:///src/app/core/post.model.ts","webpack:///src/app/core/post.service.ts","webpack:///src/app/posts/posts.component.ts","webpack:///src/app/posts/posts.component.html","webpack:///src/app/single/single.component.ts","webpack:///src/app/single/single.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","event","scrollToTop","window","setInterval","pos","pageYOffset","scrollTo","clearInterval","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Comment","author","content","avatar","date","CommentAdapter","item","ID","name","avatar_URL","Date","providedIn","CommentService","http","adapter","baseUrl","url","get","pipe","data","comments","map","adapt","Post","excerpt","image","PostAdapter","featured_image","PostService","posts","PostsComponent","postService","p","list","subscribe","onActivate","SingleComponent","route","commentService","single","snapshot","params","filter","i","console","log","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SingleComponent } from './single/single.component';\nimport { PostsComponent} from './posts/posts.component'\n\nconst routes: Routes = [\n  { path: 'single/:id', component: SingleComponent },\n  { path: '**', component: PostsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Blog Reader';\n  onActivate(event) {\n    let scrollToTop = window.setInterval(() => {\n        let pos = window.pageYOffset;\n        if (pos > 0) {\n            window.scrollTo(0, pos - 60); // how far to scroll on each step\n        } else {\n            window.clearInterval(scrollToTop);\n        }\n    }, 16);\n  }\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<a href=\"#\"><h1>{{title}}</h1></a>\n<app-posts></app-posts>\n\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule }    from '@angular/common/http';\nimport { PostsComponent } from './posts/posts.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { SingleComponent } from './single/single.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostsComponent,\n    SingleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgxPaginationModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\r\nexport class Comment {\r\n\tconstructor(\r\n\t  public id: number,\r\n\t  public author: string,\r\n\t  public content: string,\r\n\t  public avatar: string,\r\n\t  public date: Date\r\n\t) {}\r\n  }\r\n\r\n  @Injectable({\r\n\tprovidedIn: \"root\"\r\n  })\r\n  export class CommentAdapter {\r\n\tadapt(item: any): Comment {\r\n\t  return new Comment(item.ID, item.author.name, item.content, item.author.avatar_URL, new Date(item.date));\r\n\t}\r\n  }","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Comment, CommentAdapter } from \"./comment.model\";\r\nimport { Observable} from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class CommentService {\r\n\tprivate baseUrl = \"https://public-api.wordpress.com/rest/v1.1/sites/en.blog.wordpress.com/posts/\";\r\n\r\n\tconstructor(private http: HttpClient, private adapter: CommentAdapter) {}\r\n\tlist(id): Observable<Comment[]> {\r\n\t\tconst url = this.baseUrl + id + \"/replies\";\r\n\t\treturn this.http\r\n\t\t  .get(url)\r\n\t\t  .pipe(\r\n\t\t\t// Adapt each item in the raw data array\r\n\t\t\tmap((data: any,{}) => data.comments.map(item => this.adapter.adapt(item)))\r\n\t\t  );\r\n\t  }\r\n}","import { Injectable } from \"@angular/core\";\r\nexport class Post {\r\n\tconstructor(\r\n\t  public id: number,\r\n\t  public title: string,\r\n\t  public content: string,\r\n\t  public excerpt: string,\r\n\t  public date: Date,\r\n\t  public image: string\r\n\t) {}\r\n  }\r\n\r\n  @Injectable({\r\n\tprovidedIn: \"root\"\r\n  })\r\n  export class PostAdapter {\r\n\tadapt(item: any): Post {\r\n\t  return new Post(item.ID, item.title, item.content, item.excerpt, new Date(item.date), item.featured_image);\r\n\t}\r\n  }","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Post, PostAdapter } from \"./post.model\";\r\nimport { Observable} from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class PostService {\r\n\tprivate baseUrl = \"https://public-api.wordpress.com/rest/v1.1/sites/en.blog.wordpress.com/posts/\";\r\n\r\n\tconstructor(private http: HttpClient, private adapter: PostAdapter) {}\r\n\tlist(): Observable<Post[]> {\r\n\t\tconst url = this.baseUrl;\r\n\t\treturn this.http\r\n\t\t  .get(url)\r\n\t\t  .pipe(\r\n\t\t\t// Adapt each item in the raw data array\r\n\t\t\tmap((data: any,{}) => data.posts.map(item => this.adapter.adapt(item)))\r\n\t\t  );\r\n\t  }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Post } from \"../core/post.model\";\nimport {PostService} from \"../core/post.service\"\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.scss']\n})\nexport class PostsComponent implements OnInit {\n  posts: Post[];\n  p: number = 1;\n  \n  onActivate(event) {\n    let scrollToTop = window.setInterval(() => {\n        let pos = window.pageYOffset;\n        if (pos > 0) {\n            window.scrollTo(0, pos - 60); // how far to scroll on each step\n        } else {\n            window.clearInterval(scrollToTop);\n        }\n    }, 16);\n  }\n\n  constructor(private postService: PostService) {\n    this.posts = [];\n  }\n\n  ngOnInit() {\n    // Subscribe\n    this.postService.list().subscribe((posts: Post[]) => {\n      //  Store\n      this.posts = posts;\n    });\n  };\n  \n\n\n}\n\n","<div class=\"container\">\n\t<router-outlet (activate)=\"onActivate($event)\" ></router-outlet>\n\t<ul>\n\t\t<li class = \"post media\" *ngFor=\"let post of posts | paginate: { itemsPerPage: 10, currentPage: p }\" >\n\t\t\t\n\t\t\n\t\t\t<a class=\"pull-left\" [routerLink]=\"['/single', post.id]\" routerLinkActive=\"active\">\n\t\t\t\t<img class=\"media-object\" data-src={{post.image}}>\n\t\t\t</a>\n\t\t\t<div class=\"media-body\">\n\t\t\t\t<div><a class=\"pull-left\" [routerLink]=\"['/single', post.id]\" routerLinkActive=\"active\"><h2>{{ post.title }}</h2></a></div>\n\t\t\t\t<div class=\"date\">\t{{ post.date }} </div>\n\t\t\t\t<div innerHTML={{post.content}}></div>\n\t\t\t</div>\n\t\t\n\t\t</li>\n\t</ul>\n\n\t<pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Post } from \"../core/post.model\";\nimport {PostService} from \"../core/post.service\"\nimport { Comment } from \"../core/comment.model\";\nimport {CommentService} from \"../core/comment.service\"\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-single',\n  templateUrl: './single.component.html',\n  styleUrls: ['./single.component.scss']\n})\nexport class SingleComponent implements OnInit {\n  posts: Post[];\n  comments: Comment[];\n  id: number;\n  single: Post;\n  p: number = 1;\n\n  constructor(private route: ActivatedRoute, private postService: PostService, private commentService: CommentService) { \n    this.posts = [];\n    this.comments = [];\n    this.single = {id:1, title:\"\", content:\"\", excerpt:\"\", date: new Date(), image:\"\"}\n   }\n  ngOnInit() {\n    let id = this.route.snapshot.params.id;\n    this.id = id;\n    \n    \n\n    // Subscribe to posts\n    this.postService.list().subscribe((posts: Post[]) => {\n      //  Store\n      this.posts = posts;\n      this.single = posts.filter(i => i.id == id)[0];\n\n    });\n\n     // Subscribe to comments\n     this.commentService.list(id).subscribe((comments: Comment[]) => {\n      //  Store\n      this.comments = comments;\n\n    });\n\n    console.log(this.comments)\n   \n  }\n\n}\n","<div class=\" single container\">\n\t<h2>{{single.title}}</h2>\n\t<img data-src={{single.image}}>\n\t<div innerHTML={{single.content}}></div>\n</div>\n\n<div class=\"comments container\">\n\t<h2>Comments</h2>\n\t<ul>\n\t\t<li class = \"comment media\" *ngFor=\"let comment of comments | paginate: { itemsPerPage: 10, currentPage: p }\" >\n\t\t\t\n\t\t\n\t\t\t<div class=\"pull-left\">\n\t\t\t\t<img class=\"media-object\" data-src={{comment.avatar}}>\n\t\t\t\t<p class=\"author\">{{comment.author}}</p>\n\t\t\t</div>\n\t\t\t<div class=\"media-body\">\n\t\t\t\t<div class=\"date\">\t{{ comment.date }} </div>\n\t\t\t\t<div innerHTML={{comment.content}}></div>\n\t\t\t</div>\n\t\t\n\t\t</li>\n\t</ul>\n\n\t<pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\n\n\t\n</div>\n<div class=\"container\" ><h2>Other Posts</h2></div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}